#lang eopl
; ------------------------------------------------------------------------------
; Exercise 3.5

; A bit incomplete due to space restrictions:
;
; (value-of <<x>>                                             (value-of <<1>>
;          [y=(num-val 2),x=(num-val 7)]rho0) = (num-val 7)             [y=(num-val 2),x=(num-val 7)]rho0) = (num-val 1)
; ----------------------------------------------------------------------------------------------------------------------
;                                 (value-of <<-(x,1)>>
;                                           [y=(num-val 2),x=(num-val 7)]rho0) = (num-val 6) ...   ...
;                                 --------------------------------------------------------------   -------------------------------------------------------------------------
;                                 (value-of <<let x = -(x,1) in -(x,y)>>                           (value-of <<-(-(x,8),y)>>
;                                           [y=(num-val 2),x=(num-val 7)]rho0) = (num-val 4)                 [y=(num-val 4),y=(num-val 2),x=(num-val 7)]rho0) = (num-val -5)
;                                 ------------------------------------------------------------------------------------------------------------------------------------------
;                                                   (value-of <<let y = let x = -(x,1) in -(x,y)
;    (value-of <<2>>                                            in -(-(x,8),y)>> 
;              [x=(num-val 7)]rho0) = (num-val 2)             [y=(num-val 2),x=(num-val 7)]rho0) = (num-val -5)
;    ----------------------------------------------------------------------------------------------------------
;                                 (value-of <<let y = 2
;                                             in let y = let x = -(x,1) in -(x,y)
; (value-of <<7>>                                in -(-(x,8),y)>>
;           rho0) = (num-val 7)             [x=(num-val 7)]rho0) = (num-val -5)
; -----------------------------------------------------------------------------
;              (value-of <<let x = 7
;                          in let y = 2
;                             in let y = let x = -(x,1) in -(x,y)
;                                in -(-(x,8),y)>>
;                        rho0) = (num-val -5)
