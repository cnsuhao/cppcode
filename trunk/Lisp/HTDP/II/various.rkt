#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 1
#"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 3922 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 174
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname various) "
 #"(read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constru"
 #"ctor repeating-decimal #t #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/batch-io"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #"; List-of-names -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 54 #"; determines whether \"Flatt\" occurs on a-list-of-names"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"contains-flatt?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"Flatt\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"Fish\""
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"Find\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"contains-flatt?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"Flatt\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"contains-flatt?"
0 0 25 3 1 #" "
0 0 14 3 15 #"a-list-of-names"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 15 #"a-list-of-names"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 15 #"a-list-of-names"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 15 #"a-list-of-names"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"Flatt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 15 #"contains-flatt?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 15 #"a-list-of-names"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"juxtapose"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 3 #") ("
0 0 14 3 7 #"string?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 3 #") ("
0 0 14 3 9 #"juxtapose"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 16 #"a-list-of-string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 22 #"\"not a-list-of-string\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"juxtapose"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"hehe\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"nimei\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))) "
0 0 19 3 11 #"\"hehenimei\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"all-true"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #") ("
0 0 14 3 13 #"all-true-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a-list\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"all-true-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 2 #") "
0 0 14 3 4 #"head"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #" ("
0 0 14 3 8 #"all-true"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"not bool\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"all-true"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"one-true"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #") ("
0 0 14 3 13 #"one-true-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-bool-list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a-list\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"one-true-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #" ("
0 0 14 3 8 #"one-true"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"not bool\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"one-true"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"mysum"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-num-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-num-list"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-num-list"
0 0 25 3 3 #") ("
0 0 14 3 10 #"mysum-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-num-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-num-list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"not list\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"mysum-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #" ("
0 0 14 3 5 #"mysum"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not number\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"mysum"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 5 #")))) "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pos?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 9 #"pos?-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a list\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"pos?-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #") ("
0 0 14 3 4 #"pos?"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"not a number\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pos?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"ill-sized?"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-img-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-img-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-img-list"
0 0 25 3 3 #") ("
0 0 14 3 15 #"ill-sized?-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-img-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 10 #"a-img-list"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a list\""
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"ill-sized?-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"image?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 10 #"ill-sized?"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 4 #"head"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"not a image\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"ill-sized?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 2          17 65 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\30\b"
 #"\6\0\0\0\340w=\370\0\0\4`IDATH\211\265\225_l\323U\24"
 #"\307?\277\376\332\376~\245[\273\256\254t\245c\e\3A\30a$\22\2\230\200"
 #">\341\3\360@\0\215\2311\306h\324"
 #"\27\202\276\370d\242\341\311D%$\206\304\304\304\27%H\242F\23C0\0302"
 #"\\\210N#+2\225\277\2161&\203nmi\373\373\177|\370m\35\245\e>"
 #"\30Orr\223sN\316\347\334\357\275\271W\21\21\376O\v,\224xn\205\""
 #"\263~a\360T\303\24\27\6O\311\3755\v\22Ddaw*\222\373\372m\351"
 #"\357A*gvH\371\344j\251\234\332(\2253;\244\277\a9\177\342\r\261\247"
 #"G\344a=\224\205$rF?\25\373\317\17\b\265z(-\t\2\252\37W<"
 #"\3\267\352\"\206\205kz8\201G\221\324>\232\272w+\363\365i\4\270U)"
 #"\17\275\210R\370\205\221\241i\212\223e"
 #"bI\2355{\326\23i\325\301u\250"
 #"\336.p\361\233\313\24\357\32\304\222:"
 #"\331\336v\302\251\225$\266\234h\204\324"
 #"m\311s\2442\370\214\30\203\e\344\364"
 #"\201f\311\17\37\27\21\221\374\360q9"
 #"}\240Yd\272_$\277\177\336\334\364"
 #"\227\235\222\377aO\203\\u\207l\\"
 #"\376\30\274\213h=\35\224\vU\22\353"
 #"\366\2\220X\267\27\243\fh\31\320R"
 #"\30e\352r\345B\225x\233B\351\322"
 #"\257\214\237}\255N\222\32\3003\357\210"
 #"q\351(\341\3666P\346\270\a{\25"
 #"\16\366\316\354<\270\f\202\231\371sa"
 #"\215%\351*\225\321?\230\270v\276\6\251u\262F\277 \324\354\240Fu\bj"
 #"D\343\21n\r\274\17\300=\e\364(\20\350\0\265\35=\nS\271\317"
 #"k\271h<\2A\25-\252\322B\216b\356#\34\333\226:@\345\352W"
) 500
(
 #"\350\311\250?} L_\377\16\276?\362:)\35\266\257W\350{\341-P\332"
 #"@i\245\357\371g\371\366\235\375s\271"
 #"\235\335\240\252\20P\211\305\\\314\233\347"
 #"\270;9Q\177\213n~\266J2\233\322(M-\240%@\317\202\332\345O\255"
 #"\244A\321@L\220\t\360n\200{\35\31410\246\240\234\207r\t\212\5(\25"
 #"\31:\257\223\330u\222\236\325\275J\260v;-\27\5\17\304\3<\20\a\260f"
 #"\274\n\202\277\316\306\304\361k\305\363s"
 #"\342\325\316\3066\35l\313\364\217m6"
 #"\3508\246_\344:\340Y\340U\300+"
 #"\202\222\237\251\b\3174\316\373q\257\342"
 #"\327\271\16x.\270\256\277\2\2165\a\253\1L/\ff\25\302:8&\250E"
 #"_\26\340\372\317C\\;\376\t\367["
 #"\367\356\315t\255]\4\256\5\216\r\216"
 #"\17\21\327\305\266\3\215\200P\264\e\243p\v]3@\rS{\e\314q\206\217"
 #"\36\343\342o^\35\240\224\377\216\256\303OC\3616\330&X\276WJ.\350\235"
 #"\215\200X\317.\246F\337\243=\256A`f\2\317\205\320\"\222k;\330\22\e"
 #"g\354o\a\200\354\222 jf\361\314\0U0\f\260-\304v\30\37\27\364\316"
 #"mhz\244\36\220X\263\217\341\201\303"
 #"$3\367\b\207u\250\26\375\355\333\6[_\332\312\2746>\2\225\n\230\6X"
 #"&\305\274\303\225\273\253\310n\332IS"
 #",\376\200D\315i\245\355\261Wd\354"
 #"\367\303,\17\337\201\3468\330\26\4C"
 #"`\336\233k\352\272\276\346\266\351On"
 #"\32P\255\340\31&\247\a\202\264n\330Ht\361R\22\311\24\360\300k*\236+"
 #"?\36y\222\226\320\b\253\372\242\20\213"
 #"\373\315T\365\1\200\353kn[`\308U\213\\N\230\340q\272w\37\"\231"
 #"J\323\226^\2524\0fm\340\335m\222\f\346\350"
 #"\354\321\210f\342~\263Y\233\275\222\226\211\330\0167"
) 177
(
 #"Gm\6\177\322iy\344\t\226=\365&M\261\26\262]=\265g{\301\17g"
 #"\350\304!\2318\373!K\223\5\322\35"
 #"a\242M\n\261\270\202\330\16\225\222\313"
 #"\324\224\307\304\270\307\215\322\n2\333^"
 #"%\261r3\315\261\26\332;\272\352\376"
 #"\204\5\1\0\223cW\344\257s\307\230\34\31\300.\214Q\275}\25%\24A\215"
 #"&Y\324\266\234P|\31\331\355/\243"
 #"\351\21R\355Y\242\315\261\206\17\347\241\0_\21WJ\305iJ\205il\313\304"
 #"4\252\4T\25U\r\242\351\0214]\257\351=\237\375+\340\277\332"
 #"?\26xr\351 6\355\351\0\0\0\0IEND\256B`\202"
) 0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 2          17 65 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\30\b"
 #"\6\0\0\0\340w=\370\0\0\4\334IDATH\211\265\225]l\24U\24"
 #"\307\177wv\272\263\333\356W\273P\226\226\nmA\232\206h\"\201hP\210J"
 #"\20\277P\301'\23\345\1\204\370$\17b\32\22C\324\20\215\361I\37\364\5c"
 #"\bD}\0\2031\32\25\n\310g\213"
 #"\215\37)\320\226\357\226-\355R\332\335"
 #"\355\314\356\354t\356\\\37\266\355\262\26"
 #"|\322\223\334L\346\234\231\377\357\336s"
 #"\317\275G(\245\370?M\377\327\250k"
 #")\231:\212\227\374\0067w\23\225\e\204\2120\370g\243U\326#bK\251H"
 #"\254@\v\265\212{I\210{\255\300\275\361\225\222\3\237\243G$Z\300(~\\"
 #"\1L\24\2206\210\202\215[\3600\v\367c\334\367\nUM\353\356\n\231\tp"
 #"-ewm\305H\214N\212*\360U\224\342r\2\\\a&\n\0x\31\233\364"
 #"m\201\243\232I\254\371z\6D\273\363"
 #"EI\251\362\235\257c\324\215\323\327="
 #"\306\306'\177\344\3029\a\0025\245\21"
 #"\254\206`\214\336\36\311kO\235\244\347\262EM(M8t\221\201\3576\314H"
 #"G\31\300\271\372\5F\3150\302\347p"
 #"\245/\313\236\256\215|\360F;\370k\301?o\3629\v\374av\275y\206="
 #"\277\256\345\372\r\r\2\6U\"\213o\3422\3?m+\203L\247H\346R\252"
 #"pj\35\301\306*D$\6\376pQP\213\203\26-\375\341e\300\273\rN\n"
 #"\354Q(X`e\300\32\2470b20\262\204\320\212\217H4>(\312V\340"
 #"\16\36DD\25\"\350\a\335\0=R\24\367%@k(\r_\242\350\327#\340"
 #"\17\201\356\a\177\0|\25\30U\0321\375\34\331\277v\243\244Tp"
 #"G\231\232\227\16R\275 \4*\f\266\306\320\331\24_\356\370\24\200"
) 500
(
 #"\266\216\337\356X3\240\345\371pU\e\0/\275\3730\213\232+A\5\20RR"
 #"]\231\346f\262\203[\251!j\347\326\27\1JJ\345\244/\241\345\232Ivg"
 #"\371\366\263\23\230\31\213Ww\276Mb"
 #"\351\312\177\356\e\210 m\207w0p\254\207};\17\20\212V\361\302\206V\32"
 #"\346\326\241)\0177s\v3\233.\1\0\334\321\b\27OOp\341D\222\27\327"
 #"l\241\276\256\31\241\5p\207A\31 bw\226[\36LACb\1m\333\267"
 #"\223\354\273E\327\361N\254\206(--\t4\347\26\256eS\226\"\200\205s\32"
 #"Y\264\352q0\3430\fx~|a\23\231\357C\217E&\305G\300\313\340\345"
 #"$b\304\207\30\253\246\2368\365\255-(}\b\317Jb\0252\4'5\313\0"
 #"*\230AT\217\241&\243*n@(\210\317\257\27\253g\252\212\354,Z\345\b"
 #"\204\r\250\6\244\16N\36\245'\321\252\206\313\2629\r(D\252\261\215kTF"
 #"\35\0201\204?\ba\17\21\216\203\241"
 #"\300\25\200\3\236\rd\201\34\252\326\207"
 #"\20\203\250X\1\221\263\21\5\223\\~"
 #"\30\210\241\364\342\241\326\0\204\317'\""
 #"\v\237#3\222FV\16\243\342\327!~\r\21\276\r\3325 \t\316\r\332\267"
 #"}\2\301\213\340\214\243\\\23\364\24D\a\20\241~\b\365\343U\366ssl\24"
 #"y\337\n*\f\243\4\0000\242\r\214\r\214\342\230\343h*\3*\203L\17r"
 #"~\357\317\344\257\\-\36\252)\313\247"
 #"\21n\26\341d\240\220\5/\r\336\30\226e\321\227j\244f\311ZB\221X\t"
 #"`^=\252\222\337o\241u\363j\256v\f\201;\1\271qz\177\350+\372\16"
 #"]\300\272\234,\1\254\f\344\306\301\32\207|\16ry\244]\340\310\21\b5>"
 #"JpV\23\263k\23%\300\245\275/\323\272"
 #"y5\0\322\365\350=\235\2W\"]\17\200"
) 301
(
 #"\326\315\253\271x\370:\235]\205I\300"
 #"8\230\2712\361?\177w1\346\257\244\366\221M\204\"1\204\317'\2467Y:"
 #"rzr\322\205\314\350B\316\37\352E\272\245IKG\322\326\271\26Nv\27\35"
 #"\271<\236\224\244\222\36\307N\a\2116"
 #"/\247\361\371\367\bGc\324\316\255\237"
 #"\276\266u\0\327\361P\243\303\323B\313"
 #"\3379.\316\356\377Xi\177\354\232\366"
 #"\273\216\a\277\234\305\223\0223#\311\231"
 #"\202\301\244\303\365\364<\232\236\335J|"
 #"\311\323\4\2A\352\3467\225\365\4=\325\271O9\266D\244\372KB\300\262\r"
 #"o\211\216\316\367\325\224\337\261%\a\367"
 #"+\354<\370\343s\b\316^L\325\334"
 #"\371\264\256\337D\205a0\247\256\201\252"
 #"pdF\303\321\273wo\342\211\365!\310\21618X\24\2322\307\226\f\366\214"
 #"QW\a\217=\23\240\375\200I\313\366S\0T\30\6\201@\20\335o\224\245d"
 #"\6 0\253\205\366\3=w\rN\330.=gL\246\242\241\306e,~\340\241"
 #"{\212\335\315\356\331\364\377+\373\eY\3274M"
 #"\212\321\322_\0\0\0\0IEND\256B`\202"
) 0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 2          19 65 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0,\0\0\0.\b"
 #"\6\0\0\0SL\373\n\0\0\a\201IDATX\205\315\231_lS\327\35"
 #"\307?'\311@I \346jI\267exS\202p\324\310\201N\6\2555tQ"
 #"\231S\344\a\306`\30\320\304\330C\300"
 #"j\325(\235\224\251\336\303\322\a\230D\2{\230\262h\24/< 1\211\220\324"
 #"\250C\223Q\234\322\262\201\6e\6\2118\214$4\1,\245,$\\\233`\300"
 #"$\276g\17\306\22781\220\330\16\342"
 #"+]\351\236\243s\317\371\370\234\357\371"
 #"\235?\26RJI\232\22B\314\310\313\240\272Y)/\223\217\205\20t\356x\233"
 #"\321\374\b\305\17\vq\374\355l\266\270"
 #"\236\251\234L>N\364f\361\303\302\244"
 #"\364|*#\340\204L\246\22 \265E\262-!\245\22499\351sK)\21B"
 #"\220\250C\323\264\264\352\231\355w\272\207"
 #"5-\226VC\351httL\177\17\205B\230L\246Y\177\233\25K\314E\323"
 #"a\347\252\227\n\234),\274D\340l\300\302K\2\316\26,\244X8\232\233\233"
 #"q\271\\\0\270\335n\34\16\a~\277"
 #"\37\0\233\315\366\314\212TU\245\273\273;)OQ\24\336x\343G3`\203\301"
 #" ^\257\27\247\3239wb)\245\24BH)5)\245&\343Y\361w\213\305"
 #"\"\217\37o\227.\227K:\34\16\331"
 #"\324\264O\272\\.i\263\331\244\305b"
 #"\221\200\364\371\272\244\224\232lj\332'"
 #"\201g>{\367\356\225V\253U\236>}Z\266\264\264H\263\331,\a\6\6\344"
 #"\300\300\300\223\366g\247\27.\315~\377"
 #"%\374~?\335\335\335\370\375~\312\313\313\261X,477\323\324\264O\357u"
 #"\227\313\205\252\206PU\225C\207>\321mp\363\346M\0\f\6\3"
 #"\215\215\215\4\2\1\302\341\360\334{\366\211\222<<88\230\262P\2"
) 500
(
 #"\342\353\257\257\343\363u\341t\356\6\230"
 #"1\244\335\335\335(\212\222\344\331\372\372"
 #"z\332\333\333\223\312\5\203\301\354\0'"
 #"\274\232\220\242(z~\342\35\240\243\243"
 #"\3\233\315\226\224\227\320\324E \24\n"
 #"\261f\315\32\216\35;\2266\340t="
 #"\327\22\26\213\5\0\207\303\201\303\341\320"
 #"\363\273\273?\307f\373\351\214\362~\277"
 #"\237P(D(\24\302\353\365\22\f\69w\356\34\301`\220`0\210\301`\230"
 #"_`\210\333\344\370\361\247C\232\210\6"
 #"S\363 \36\272\252\253\253ihh\240"
 #"\241\241\1\0\263\331\214\331l\246\267\267"
 #"\27\257\327\213\321h|9\300S\345v"
 #"\273g\330!\341\331\316\316N\275w\353"
 #"\353\3539q\342\4\0V\253\25\203\301"
 #"\200\327\353\235\177`\200\255[\26718"
 #"8\210\313\365\21n\367_\365I\a\202"
 #"\321\321Q\0\316\2349\303\226-[\222"
 #"\276\333\264i\223\376\236V\314\235\vp"
 #"|\21\210o\310\17\35\372\204\346\346\375"
 #"l\335\272\rx\352\355\4,\300\312\225+iii\1\342Q\340\300\201\38\235"
 #"N\202\301 \341p\30\253\325\212\333\355"
 #"\326\313[\255\326\314\201\23C-D<x(\212Byy9\212\242\320\324\264O"
 #"\367oM\315\273\354\334\271\223\306\306F\226,Y\242\257`v\273=\t8\221N"
 #"\310n\267c6\233\t\4\2i\301\316\0V\24\205\261\261Q\204\20H)\351\354"
 #"\354\324{UUU\334n7\307\217\267S^\276\214\332\332ZV\257^\215\307\343"
 #"\301h4\22\16\207\365\310\220\320TK"
 #"\264\264\264`\267\333\t\4\2\4\2\1\314fs\346\300\200\16+\204H\232X~"
 #"\277\37\213\305\302;\357\254\3\342\226\331"
 #"\277\177?EEE\0x\275^\332\333\3331\32\215\30\215F\234N'\6\203A"
 #"\217\fEEE\270\335n\335\26\333\267oO\vX?\""
 #"\315\346\304\221\315]\327T\231L\246Y\37\221f\275\275\234"
) 500
(
 #"/\330\271jV\300\257\n,\314\2\370U\202\205\27\0\277j\2600%J\344\344"
 #"\344\316{c{\366\354\301\343\361044\4@YY\31\2337o\6 4\36"
 #"a\311\342\302\27\326!2\271\f\314\311"
 #"\311\241s\307\333@\374\366g\305\307\236"
 #"\31\263}xx\230\266\2666\316v5\261~m>\325o\25PQY\0\2231"
 #"\372z#|y1J\327\271G\254}\367w\354\332\265\213\322\322\322\371\3\26B"
 #"\360\351\257~\242\247\267\34\375W\22p"
 #"OO\17\e\355\26>\330\261\230\367\337"
 #"+\241\240p\346(\312\230\306\370\355\a"
 #"\34:r\227\203\35Q>\363\372\251\252\252zf\233\31\235\232ss\343\0?\314"
 #"\217\350? \241\341\341a6\332-\354\371\315\22\32\32\276KaY_j\200\357"
 #"]\243\360;\5|\270\273\230\337;\v\331h\2670<<<?\300\232\246a2"
 #"\225p\363\311\355e\284~\237\326\326V>\330\261\230\35\277.A\274v\25"
 #"9R\231\262\169RI^\3515\304\242\5l\373\331\"j\177\276\220\326\326V"
 #"\324{\343\331\a\236\256X,\276Z\366"
 #"]\355\345?\377\374\23\357\277W\242C"
 #"\1\210\327\256&\225O\244\345H%\344"
 #"\b\310\377\26\2737\347s\276\353\217\364"
 #"\3777\271lV\200\247_\257&\322>\237\217\365k\363Sz\366E\365-\314\317"
 #"a\335\252<|>_\3122Y\271\320\236.\217\307C\365[\5i\325\247\345\346"
 #"\362\2469\17\217\307\223\262L\306\226\350"
 #"\357\277\3\300h~D\377\1CCC\361\3205\35h\232\217\23i\251I\320d"
 #"\34X@\371\322\\\6\6\6\262\v\254(\n\6\203\201\332\223W0\231J(~"
 #"XH\322\305\370d\334\317\323}\233JZL\242Mj,~\375\6\332\204\2066"
 #"\371\354\235cF\177\312\2507@\213V\360\355\212"
 #"\3179\274a\5EEE(\212BYY\31}"
) 478
(
 #"\275\337\260\252z!r\244rV\320\0"
 #"\341\313? :\26\341\372\255\30\313\227W\244,\223YX\213Vp\367F\374\204"
 #"Q{\362\n\352\r\30\353\253`hh"
 #"\210//F\221\261\247\213\210\224\362\271"
 #"\17@4:\2116\21\343\337=\223\372\222\235U\340\201\v\327\30\373_DO\217"
 #"\366\0250p\341\32\247N\235\242\353\334"
 #"#\306o? 6\241\241\335~\375\271"
 #"\177\330\b!\270s\361\373\304\"\23\214"
 #"\337\217\361\305\245\030555(\212\242"
 #"?z\331t\227\346\251\225\34\336\260\202"
 #"\332\223W\364\364\340\315[\34h\332\207"
 #"\362\360\317|\270\273\30\261h\1\344\b"
 #"\26\30\373fD\26!\4\243_\2252\361`\2y/\312_:\36\22[\372["
 #"\16\36<\210:\364\343xG\364\367\260|\375\3TUM\277\207UUe||"
 #"\234\303\eV\0\320\274l\31\341p\30UUQ\212\26SWW\307\301\216(G"
 #";CL\214Ex\34yL\244\257\34!D\3223r\276\224\211\361(\362^\224"
 #"\243\2475\216ti\324\325\325\351\355h"
 #"\217CI\243\230\321\244\223Rb2\225"
 #"\320\337\177\207\342\312B\304\345\247\303^"
 #"ZZ\312g^?\e\355\26\276\31\231\244vs>\371\3719\334\275P\212&@"
 #"\233\320\220\217b\304\356>\340~$\306"
 #"\221\277?\342H\227\306?|\227\365\35"
 #"\333h\177O\22lV\200\247\306\341\351"
 #"[\313\252\252*\316~u\203\266\2666~\371\321\37X\267*\2177\315y\224/"
 #"\315E\233\214q\375V|\202}q)\206\355\27\37s\276\351\351\366RU\325'"
 #"\266\23z\0322\334^\346\346\346&\315r!D\312\323oh<B\337\325\0>"
 #"\237/\345\6\276\246\246\206\212J\363\2546\360\377\aG-"
 #"\356]Yn\30h\0\0\0\0IEND\256B`\202"
) 0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"24"
0 0 25 3 2 #") "
0 2          19 65 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0,\0\0\0.\b"
 #"\6\0\0\0SL\373\n\0\0\a\201IDATX\205\315\231_lS\327\35"
 #"\307?'\311@I \346jI\267exS\202p\324\310\201N\6\2555tQ"
 #"\231S\344\a\306`\30\320\304\330C\300"
 #"j\325(\235\224\251\336\303\322\a\230D\2{\230\262h\24/< 1\211\220\324"
 #"\250C\223Q\234\322\262\201\6e\6\2118\214$4\1,\245,$\\\233`\300"
 #"$\276g\17\306\22781\220\330\16\342"
 #"+]\351\236\243s\317\371\370\234\357\371"
 #"\235?\26RJI\232\22B\314\310\313\240\272Y)/\223\217\205\20t\356x\233"
 #"\321\374\b\305\17\vq\374\355l\266\270"
 #"\236\251\234L>N\364f\361\303\302\244"
 #"\364|*#\340\204L\246\22 \265E\262-!\245\22499\351sK)\21B"
 #"\220\250C\323\264\264\352\231\355w\272\207"
 #"5-\226VC\351httL\177\17\205B\230L\246Y\177\233\25K\314E\323"
 #"a\347\252\227\n\234),\274D\340l\300\302K\2\316\26,\244X8\232\233\233"
 #"q\271\\\0\270\335n\34\16\a~\277"
 #"\37\0\233\315\366\314\212TU\245\273\273;)OQ\24\336x\343G3`\203\301"
 #" ^\257\27\247\3239wb)\245\24BH)5)\245&\343Y\361w\213\305"
 #"\"\217\37o\227.\227K:\34\16\331"
 #"\324\264O\272\\.i\263\331\244\305b"
 #"\221\200\364\371\272\244\224\232lj\332'"
 #"\201g>{\367\356\225V\253U\236>}Z\266\264\264H\263\331,\a\6\6\344"
 #"\300\300\300\223\366g\247\27.\315~\377"
 #"%\374~?\335\335\335\370\375~\312\313\313\261X,477\323\324\264O\357u"
 #"\227\313\205\252\206PU\225C\207>\321mp\363\346M\0\f\6\3"
 #"\215\215\215\4\2\1\302\341\360\334{\366\211\222<<88\230\262P\2"
) 500
(
 #"\342\353\257\257\343\363u\341t\356\6\230"
 #"1\244\335\335\335(\212\222\344\331\372\372"
 #"z\332\333\333\223\312\5\203\301\354\0'"
 #"\274\232\220\242(z~\342\35\240\243\243"
 #"\3\233\315\226\224\227\320\324E \24\n"
 #"\261f\315\32\216\35;\2266\340t="
 #"\327\22\26\213\5\0\207\303\201\303\341\320"
 #"\363\273\273?\307f\373\351\214\362~\277"
 #"\237P(D(\24\302\353\365\22\f\69w\356\34\301`\220`0\210\301`\230"
 #"_`\210\333\344\370\361\247C\232\210\6"
 #"S\363 \36\272\252\253\253ihh\240"
 #"\241\241\1\0\263\331\214\331l\246\267\267"
 #"\27\257\327\213\321h|9\300S\345v"
 #"\273g\330!\341\331\316\316N\275w\353"
 #"\353\3539q\342\4\0V\253\25\203\301"
 #"\200\327\353\235\177`\200\255[\26718"
 #"8\210\313\365\21n\367_\365I\a\202"
 #"\321\321Q\0\316\2349\303\226-[\222"
 #"\276\333\264i\223\376\236V\314\235\vp"
 #"|\21\210o\310\17\35\372\204\346\346\375"
 #"l\335\272\rx\352\355\4,\300\312\225+iii\1\342Q\340\300\201\38\235"
 #"N\202\301 \341p\30\253\325\212\333\355"
 #"\326\313[\255\326\314\201\23C-D<x(\212Byy9\212\242\320\324\264O"
 #"\367oM\315\273\354\334\271\223\306\306F\226,Y\242\257`v\273=\t8\221N"
 #"\310n\267c6\233\t\4\2i\301\316\0V\24\205\261\261Q\204\20H)\351\354"
 #"\354\324{UUU\334n7\307\217\267S^\276\214\332\332ZV\257^\215\307\343"
 #"\301h4\22\16\207\365\310\220\320TK"
 #"\264\264\264`\267\333\t\4\2\4\2\1\314fs\346\300\200\16+\204H\232X~"
 #"\277\37\213\305\302;\357\254\3\342\226\331"
 #"\277\177?EEE\0x\275^\332\333\3331\32\215\30\215F\234N'\6\203A"
 #"\217\fEEE\270\335n\335\26\333\267oO\vX?\""
 #"\315\346\304\221\315]\327T\231L\246Y\37\221f\275\275\234"
) 500
(
 #"/\330\271jV\300\257\n,\314\2\370U\202\205\27\0\277j\2600%J\344\344"
 #"\344\316{c{\366\354\301\343\361044\4@YY\31\2337o\6 4\36"
 #"a\311\342\302\27\326!2\271\f\314\311"
 #"\311\241s\307\333@\374\366g\305\307\236"
 #"\31\263}xx\230\266\2666\316v5\261~m>\325o\25PQY\0\2231"
 #"\372z#|y1J\327\271G\254}\367w\354\332\265\213\322\322\322\371\3\26B"
 #"\360\351\257~\242\247\267\34\375W\22p"
 #"OO\17\e\355\26>\330\261\230\367\337"
 #"+\241\240p\346(\312\230\306\370\355\a"
 #"\34:r\227\203\35Q>\363\372\251\252\252zf\233\31\235\232ss\343\0?\314"
 #"\217\350? \241\341\341a6\332-\354\371\315\22\32\32\276KaY_j\200\357"
 #"]\243\360;\5|\270\273\230\337;\v\331h\2670<<<?\300\232\246a2"
 #"\225p\363\311\355e\284~\237\326\326V>\330\261\230\35\277.A\274v\25"
 #"9R\231\262\169RI^\3515\304\242\5l\373\331\"j\177\276\220\326\326V"
 #"\324{\343\331\a\236\256X,\276Z\366"
 #"]\355\345?\377\374\23\357\277W\242C"
 #"\1\210\327\256&\225O\244\345H%\344"
 #"\b\310\377\26\2737\347s\276\353\217\364"
 #"\3777\271lV\200\247_\257&\322>\237\217\365k\363Sz\366E\365-\314\317"
 #"a\335\252<|>_\3122Y\271\320\236.\217\307C\365[\5i\325\247\345\346"
 #"\362\2469\17\217\307\223\262L\306\226\350"
 #"\357\277\3\300h~D\377\1CCC\361\3205\35h\232\217\23i\251I\320d"
 #"\34X@\371\322\\\6\6\6\262\v\254(\n\6\203\201\332\223W0\231J(~"
 #"XH\322\305\370d\334\317\323}\233JZL\242Mj,~\375\6\332\204\2066"
 #"\371\354\235cF\177\312\2507@\213V\360\355\212"
 #"\3179\274a\5EEE(\212BYY\31}"
) 478
(
 #"\275\337\260\252z!r\244rV\320\0"
 #"\341\313? :\26\341\372\255\30\313\227W\244,\223YX\213Vp\367F\374\204"
 #"Q{\362\n\352\r\30\353\253`hh"
 #"\210//F\221\261\247\213\210\224\362\271"
 #"\17@4:\2116\21\343\337=\223\372\222\235U\340\201\v\327\30\373_DO\217"
 #"\366\0250p\341\32\247N\235\242\353\334"
 #"#\306o? 6\241\241\335~\375\271"
 #"\177\330\b!\270s\361\373\304\"\23\214"
 #"\337\217\361\305\245\030555(\212\242"
 #"?z\331t\227\346\251\225\34\336\260\202"
 #"\332\223W\364\364\340\315[\34h\332\207"
 #"\362\360\317|\270\273\30\261h\1\344\b"
 #"\26\30\373fD\26!\4\243_\2252\361`\2y/\312_:\36\22[\372["
 #"\16\36<\210:\364\343xG\364\367\260|\375\3TUM\277\207UUe||"
 #"\234\303\eV\0\320\274l\31\341p\30UUQ\212\26SWW\307\301\216(G"
 #";CL\214Ex\34yL\244\257\34!D\3223r\276\224\211\361(\362^\224"
 #"\243\2475\216ti\324\325\325\351\355h"
 #"\217CI\243\230\321\244\223Rb2\225"
 #"\320\337\177\207\342\312B\304\345\247\303^"
 #"ZZ\312g^?\e\355\26\276\31\231\244vs>\371\3719\334\275P\212&@"
 #"\233\320\220\217b\304\356>\340~$\306"
 #"\221\277?\342H\227\306?|\227\365\35"
 #"\333h\177O\22lV\200\247\306\341\351"
 #"[\313\252\252*\316~u\203\266\2666~\371\321\37X\267*\2177\315y\224/"
 #"\315E\233\214q\375V|\202}q)\206\355\27\37s\276\351\351\366RU\325'"
 #"\266\23z\0322\334^\346\346\346&\315r!D\312\323oh<B\337\325\0>"
 #"\237/\345\6\276\246\246\206\212J\363\2546\360\377\aG-"
 #"\356]Yn\30h\0\0\0\0IEND\256B`\202"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; NEList-of-temperatures -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 35 #"; computes the average temperature "
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"average"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 3 #"-30"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 5 #")))) "
0 0 22 3 2 #"-9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"average"
0 0 25 3 1 #" "
0 0 14 3 6 #"anelot"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"mysum"
0 0 25 3 1 #" "
0 0 14 3 6 #"anelot"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"how-many"
0 0 25 3 1 #" "
0 0 14 3 6 #"anelot"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"how-many"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-temp-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-temp-list"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-temp-list"
0 0 25 3 3 #") ("
0 0 14 3 13 #"how-many-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-temp-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 11 #"a-temp-list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a list\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"how-many-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"temp?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"how-many"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"not a templ\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"temp?"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #" "
0 0 22 3 4 #"-206"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #"; N String -> List-of-strings "
0 0 25 29 1 #"\n"
0 0 17 3 31 #"; creates a list of n strings s"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"copier"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"copier"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"copier"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 9 #"positive?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 6 #"copier"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 25 3 2 #" ("
0 0 14 3 9 #"add-to-pi"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 2 #"pi"
0 0 25 3 2 #") "
0 0 22 3 5 #"0.001"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"add-to-pi"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 2 #"pi"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 9 #"positive?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"add-to-pi"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"negative n\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"multiply"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 9 #"positive?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 8 #"multiply"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"negative n\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"multiply"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 3 #"3.9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 3 #"img"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 3 #"img"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"above"
0 0 25 3 1 #" "
0 0 14 3 3 #"img"
0 0 25 3 2 #" ("
0 0 14 3 3 #"col"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 3 #"img"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"negative n\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 3 #"img"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 3 #"img"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 3 #"img"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 3 #"img"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"negative n\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"gridwidth"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"coln"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"coln"
0 0 25 3 1 #" "
0 0 14 3 9 #"gridwidth"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"ex139-BG"
0 0 25 3 2 #" ("
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 14 3 4 #"coln"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"coln"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 14 3 9 #"gridwidth"
0 0 25 3 1 #" "
0 0 14 3 9 #"gridwidth"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 25 11 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"Balloon"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"ex139"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"Balloon"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 5 #"ex139"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 14 3 8 #"ex139-BG"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"negative n\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"layer"
0 0 25 3 2 #" ["
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 14 3 4 #"doll"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; RD -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 37 #"; how many dolls are a part of an-rd "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"depth"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"layer?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"depth"
0 0 25 3 2 #" ("
0 0 14 3 10 #"layer-doll"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"depth"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 4 #"))) "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"colors"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 2 #") "
0 0 14 3 5 #"an-rd"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"layer?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 11 #"layer-color"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 2 #") "
0 0 19 3 4 #"\", \""
0 0 25 3 2 #" ("
0 0 14 3 6 #"colors"
0 0 25 3 2 #" ("
0 0 14 3 10 #"layer-doll"
0 0 25 11 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"colors"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 4 #"))) "
0 0 19 11 14 #"\"pink, black, "
0 0 19 3 6 #"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 2 #") "
0 0 14 3 5 #"an-rd"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"layer?"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 25 3 2 #" ("
0 0 14 3 10 #"layer-doll"
0 0 25 3 1 #" "
0 0 14 3 5 #"an-rd"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-layer"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 4 #"))) "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; physical constants "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"XSHOTS"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; graphical constants "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"SHOT"
0 0 25 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; A ShotWorld is List-of-numbers. "
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #"; interpretation the collection of shots fired and moving straight u"
 #"p"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 25 #"; ShotWorld -> ShotWorld "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"main"
0 0 25 3 1 #" "
0 0 14 3 2 #"w0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 2 #"w0"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 25 3 1 #" "
0 0 14 3 4 #"tock"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 4 #"keyh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 8 #"to-image"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 25 #"; ShotWorld -> ShotWorld "
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; moves each shot up by one pixel "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"tock-remove"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"tock-remove"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 4 #"tock"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"tock"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; ShotWorld KeyEvent -> ShotWorld "
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; adds a shot to the world if the space bar was hit "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"keyh"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; ShotWorld -> Image "
0 0 25 29 1 #"\n"
0 0 17 3 54 #"; adds each y on w at (MID,y) to the background image "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"to-image"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"SHOT"
0 0 25 3 1 #" "
0 0 14 3 6 #"XSHOTS"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 8 #"to-image"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #"; List-of-numbers -> List-of-numbers"
0 0 25 29 1 #"\n"
0 0 17 3 54 #"; computes the weekly wages for all given weekly hours"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"wage*"
0 0 25 3 1 #" "
0 0 14 3 4 #"alon"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"alon"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"wage*-check100"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"alon"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"alon"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"wage*-check100"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"illegal\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"wage"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 5 #"wage*"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Number -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 39 #"; computes the wage for h hours of work"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"wage"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"wage*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"36"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"24"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"convertFC"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 22 3 2 #"32"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"9"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"compute*"
0 0 25 3 1 #" "
0 0 14 3 9 #"convert-f"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"convert-f"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"compute*"
0 0 25 3 1 #" "
0 0 14 3 9 #"convert-f"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"compute*"
0 0 25 3 1 #" "
0 0 14 3 9 #"convertFC"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"41"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"convert-euro"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 6 #"0.9501"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"compute*"
0 0 25 3 1 #" "
0 0 14 3 12 #"convert-euro"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 5 #"9.501"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 6 #"19.002"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 25 3 1 #" "
0 0 14 3 5 #"alist"
0 0 25 3 1 #" "
0 0 14 3 3 #"old"
0 0 25 3 1 #" "
0 0 14 3 3 #"new"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 5 #"alist"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"subst-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"alist"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 5 #"alist"
0 0 25 3 2 #") "
0 0 14 3 3 #"old"
0 0 25 3 1 #" "
0 0 14 3 3 #"new"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"subst-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #" "
0 0 14 3 3 #"old"
0 0 25 3 1 #" "
0 0 14 3 3 #"new"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 3 #"old"
0 0 25 3 2 #") "
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 5 #"subst"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #" "
0 0 14 3 3 #"old"
0 0 25 3 1 #" "
0 0 14 3 3 #"new"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"hehe\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"robot\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"nimei\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))) "
0 0 19 3 7 #"\"robot\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"r2d2\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"hehe\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"r2d2\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"nimei\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"work"
0 0 25 3 2 #" ["
0 0 14 3 8 #"employee"
0 0 25 3 1 #" "
0 0 14 3 4 #"rate"
0 0 25 3 1 #" "
0 0 14 3 5 #"hours"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #"; Low -> List-of-numbers"
0 0 25 29 1 #"\n"
0 0 17 3 62
#"; computes the weekly wages for all given weekly work records "
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"wage*.v2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-work"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"Robby\""
0 0 25 3 1 #" "
0 0 22 3 5 #"11.95"
0 0 25 3 1 #" "
0 0 22 3 2 #"39"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"11.95"
0 0 25 3 1 #" "
0 0 22 3 2 #"39"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"wage*.v2"
0 0 25 3 1 #" "
0 0 14 3 6 #"an-low"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"an-low"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 6 #"an-low"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 7 #"wage.v2"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"an-low"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 8 #"wage*.v2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"an-low"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; Work -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 47 #"; computes the wage for the given work record w"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"wage.v2"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 9 #"work-rate"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 10 #"work-hours"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sum-x"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 5 #"sum-x"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sum-x"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"translate"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"translate-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"translate-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"translate"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"translate"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"legal*"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"legal-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"legal-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #" ("
0 0 14 3 6 #"legal*"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"legal*"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"legal*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 4 #"1000"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 11 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"phone"
0 0 25 3 2 #" ["
0 0 14 3 4 #"area"
0 0 25 3 1 #" "
0 0 14 3 6 #"switch"
0 0 25 3 1 #" "
0 0 14 3 4 #"four"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"replace*"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"replace-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"replace*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"replace-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 10 #"phone-area"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #") "
0 0 22 3 3 #"713"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"make-phone"
0 0 25 3 1 #" "
0 0 22 3 3 #"281"
0 0 25 3 2 #" ("
0 0 14 3 12 #"phone-switch"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 3 #") ("
0 0 14 3 10 #"phone-four"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 4 #"head"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"replace*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phone"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phone"
0 0 25 3 1 #" "
0 0 22 3 3 #"713"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phone"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phone"
0 0 25 3 1 #" "
0 0 22 3 3 #"281"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #"; LLS -> List-of-numbers"
0 0 25 29 1 #"\n"
0 0 17 3 46 #"; determines the number of words on each line "
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"words-on-lines"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"words-on-lines"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"words-on-lines"
0 0 25 3 2 #" ("
0 0 14 3 15 #"read-words/line"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"ttt.txt\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 11 1 #" "
0 0 25 3 1 #"("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 16 #"))))))))))))))  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"line0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"world\""
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"lls0"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"lls1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 5 #"line0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"words-on-lines"
0 0 25 3 1 #" "
0 0 14 3 4 #"lls0"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"words-on-lines"
0 0 25 3 1 #" "
0 0 14 3 4 #"lls1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 13 #"collapse-line"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 3 #")) "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"collapse-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 13 #"collapse-line"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"remove-article"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"write-file"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"no-articles-\""
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 19 #"remove-article-impl"
0 0 25 3 2 #" ("
0 0 14 3 15 #"read-words/line"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"remove-article-impl"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 19 #"remove-article-line"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                             "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 19 #"remove-article-impl"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"remove-article-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 24 #"remove-article-line-impl"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 24 #"remove-article-line-impl"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"an\""
0 0 25 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"the\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 19 3 2 #"\"\""
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 19 #"remove-article-line"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 11 #"string->int"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"00\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 25 3 3 #") ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 11 #"string->int"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"00\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 11 #"string->int"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"code1"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"encode-word"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")) "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 11 #"encode-word"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"numberencode"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"write-file"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"numberencode-\""
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 17 #"numberencode-impl"
0 0 25 3 2 #" ("
0 0 14 3 15 #"read-words/line"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"numberencode-impl"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 17 #"numberencode-line"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 17 #"numberencode-impl"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"numberencode-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 11 #"encode-word"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 13 #"encode-letter"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 17 #"numberencode-line"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 2 #"wc"
0 0 25 3 2 #" ["
0 0 14 3 4 #"line"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"wc-add"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-wc"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 7 #"wc-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"wc-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 7 #"wc-word"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"wc-word"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"wc-letter"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"wc-letter"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"mywc"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"mywc-impl"
0 0 25 3 2 #" ("
0 0 14 3 15 #"read-words/line"
0 0 25 3 1 #" "
0 0 14 3 8 #"filename"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"mywc-impl"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 3 #") ("
0 0 14 3 7 #"make-wc"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"wc-add"
0 0 25 3 2 #" ("
0 0 14 3 9 #"mywc-line"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"mywc-impl"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"mywc-line"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"wc-add"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-wc"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 14 #"mywc-line-impl"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"mywc-line-impl"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 3 #") ("
0 0 14 3 7 #"make-wc"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"wc-add"
0 0 25 3 2 #" ("
0 0 14 3 9 #"mywc-word"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"mywc-line-impl"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"mywc-word"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-wc"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Matrix -> Matrix"
0 0 25 29 1 #"\n"
0 0 17 3 61
#"; transpose the items on the given matrix along the diagonal "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"row1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"row2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"mat1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"row1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"row2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"wor1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"wor2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tam1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"wor1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"wor2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"transpose"
0 0 25 3 1 #" "
0 0 14 3 4 #"mat1"
0 0 25 3 2 #") "
0 0 14 3 4 #"tam1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"transpose"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 6 #"first*"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 3 #") ("
0 0 14 3 9 #"transpose"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rest*"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"first*"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"first*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rest*"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"rest*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lln"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
